services:
  flyway-asset-svc:
    image: flyway/flyway:10.18.0
    #command: -configFiles=/flyway/conf/flyway.conf -locations=filesystem:/flyway/sql -postgresql.transactional.lock=false -connectRetries=60 migrate -X
    command: -configFiles=/flyway/conf/flyway.conf -locations=filesystem:/flyway/sql -postgresql.transactional.lock=false -connectRetries=60 migrate
    volumes:
      - ../ddl_scripts/nft-asset:/flyway/sql
      - ./flyway/docker-flyway-nft-asset.conf:/flyway/conf/flyway.conf
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres:16.4
    volumes:
      - ../docker/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nft_asset}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nft_asset}
      POSTGRES_DB: ${POSTGRES_DB:-nft_asset}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.7.1
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
